#pragma once
#include "state_machine.h"

// LAYERS
#define L_QWERTY 0
#define L_INSERT 1
#define L_NORMAL 2
#define L_VISUAL 3

enum custom_keycodes { VIM_E = SAFE_RANGE, VIM_B, VIM_1, VIM_2, VIM_3, VIM_4, VIM_5, VIM_6, VIM_7, VIM_8, VIM_9, VIM_0, VIM_A, VIM_H, VIM_J, VIM_K, VIM_L, VIM_D, VIM_X, VIM_BSPC, VIM_Y, VIM_P, VIM_U, VIM_R, VIM_V, VIM_O, VIM_I, VIM_ESC, VIM_OFF, VIM_TOGGLE, TAB_LEFT, TAB_RIGHT, TERM };

#define TAB_RIGHT_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_LALT) SS_DOWN(X_RIGHT) SS_UP(X_RIGHT) SS_UP(X_LALT) SS_UP(X_LGUI)
#define TAB_LEFT_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_LALT) SS_DOWN(X_LEFT) SS_UP(X_LEFT) SS_UP(X_LALT) SS_UP(X_LGUI)
#define VIM_E_SEQ SS_DOWN(X_LALT) SS_DOWN(X_RIGHT) SS_UP(X_RIGHT) SS_UP(X_LALT)
#define VIM_B_SEQ SS_DOWN(X_LALT) SS_DOWN(X_LEFT) SS_UP(X_LEFT) SS_UP(X_LALT)
#define VIM_H_SEQ SS_DOWN(X_LEFT) SS_UP(X_LEFT)
#define VIM_J_SEQ SS_DOWN(X_DOWN) SS_UP(X_DOWN)
#define VIM_K_SEQ SS_DOWN(X_UP) SS_UP(X_UP)
#define VIM_L_SEQ SS_DOWN(X_RIGHT) SS_UP(X_RIGHT)
#define VIM_4_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_RIGHT) SS_UP(X_RIGHT) SS_UP(X_LGUI)
#define VIM_0_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_LEFT) SS_UP(X_LEFT) SS_UP(X_LGUI)
#define TERM_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_LSFT) SS_DOWN(X_T) SS_UP(X_T) SS_UP(X_LSFT) SS_UP(X_LGUI)

#define COPY_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_C) SS_UP(X_C) SS_UP(X_LGUI)
#define CUT_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_X) SS_UP(X_X) SS_UP(X_LGUI)
#define PASTE_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_V) SS_UP(X_V) SS_UP(X_LGUI)
#define UNDO_SEQ SS_DOWN(X_LGUI) SS_DOWN(X_Z) SS_UP(X_Z) SS_UP(X_LGUI)
#define REDO_SEQ SS_DOWN(X_LSFT) SS_DOWN(X_LGUI) SS_DOWN(X_Z) SS_UP(X_Z) SS_UP(X_LGUI) SS_UP(X_LSFT)

#define WIGGLE_SEQ SS_DOWN(X_LEFT) SS_UP(X_LEFT) SS_DOWN(X_RIGHT) SS_UP(X_RIGHT)


// STATE DEFINITION

#define S_INITIAL_STATE 0
#define S_INSERT 0
DECLARE_STATE(INSERT)

#define S_QWERTY 1
DECLARE_STATE(QWERTY)

#define S_NORMAL 2
DECLARE_STATE(NORMAL)

#define S_VISUAL 3
DECLARE_STATE(VISUAL)

#define S_DELETE 4
DECLARE_STATE(DELETE)

#define S_NUMBER 5
